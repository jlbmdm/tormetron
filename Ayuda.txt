Alternativas para usar o ejecutar un paquete:
Supongamos las siguientes rutas:
  El proyecto esta en ~/proyecto/...
  El paquete es una subcarpeta del proyecto: ~/proyecto/paquete/...
  El paquete incluye sus __init__.py y __main__.py y los modulos con las clases del paquete (p. ej. mimodulo.py, con las clases Clase1 y Clase2)
  Si no tiene __main__.py, no vale para ejecutarlo en linea de comandos: hay que importarlo desde el interprete de python
Linea de comandos:
  Cargar el paquete ejecutando su modulo __main__.py:
    ~/proyecto/> python -m paquete
      Carga el __main__.py del paquete, que lo primero que hace es importar los módulos que necesita ese paquete:
        import mimodulo
      o bien:
        from mimodulo import Clase1


Secuencia básica


En gitbash (o cmd):
  Ir a la carpeta en la que tienes tus proyectos (en mi caso D;\_ws)
    $ cd d:
    $ cd _ws
  No se si hay que iniciar git:
    $ git init
  Descargar el repo de tormetron desde github:
    $ git clone https://github.com/jlbmdm/tormetron.git
      No estoy seguro si se escribe así... o si tienes que poner delante tu nombre de usuario de github.com (tu e-mail)
      Supongo que pide usuario y contraseña (puede que más de una vez).

  Cuando consigas hacer tu copia del repo, consulta el estado:
    $ git status
  Si en el entretando yo he hecho cambios te avisa que la versión en github.com tiene cambios. Actualiza tu versión con:
    $ git pull
      Get the latest version from the remote. This saves merging issues later.
  Modifica en tu PC uno de los ficheros, por ejemplo el Readme.md con un editor (p. ej. notepad++).
  Pregunta de nuevo el estado:
    $ git status
      Te dirá que readme.md ha cambiado en tu local
  Carga el fichero modificado en el staging area (el index) que es como la bandeja de salida
    $ git add README.md
      __ATENCION__: git distingue mayusculas/minúsculas: usar la grafía correcta
  Sube los cambios a tu repo local:
    $ git commit -m "Cambios menores en readme.md"
  Subelo al repo remoto (a github.com):
    Si pones esto:
      $ git push origin
        Entiendo que pides incorporar los cambios al master y lo tengo que autorizar
    Si pones esto otro:
      $ git push origin davidBranch
        Supongo que creas una rama tuya y no me pregunta nada.
        Eso sí, cuando quieras hacer un merge al master, con todos los cambios, supongo que lo tendré que autorizar yo
 
 to be continued...
